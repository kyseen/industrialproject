{"version":3,"sources":["components/Loginform.js","components/Logout.js","components/HomePage.js","components/Additem.js","components/SearchItems.js","components/Viewsalesreport.js","components/Createnewlist.js","components/Viewcurrentlists.js","components/Veiwcompletedlists.js","components/App.jsx","index.js"],"names":["Loginform","props","history","useHistory","useState","username","setUsername","password","setPassword","className","id","name","placeholder","value","onChange","e","target","type","Go","homepage","disabled","onClick","event","push","preventDefault","Logout","loginform","Homepage","handleClick","axios","require","Additem","barcode","setBarcode","setName","price","setPrice","weight","setWeight","description","setDesc","error","setError","notify","post","catch","err","then","URL","handleErrors","response","ok","Error","statusText","Searchitems","handleDone","state","itemData","CustomStore","key","load","fetch","json","insert","values","method","body","JSON","stringify","headers","update","refreshMode","handleRefreshModeChange","bind","this","setState","Fragment","align","dataSource","showBorders","repaintChangesOnly","keyExpr","mode","allowUpdating","allowAdding","title","showTitle","width","height","my","at","of","window","itemType","colCount","colSpan","dataField","dataType","editorType","editorOptions","enabled","fileName","allowExportSelectedData","visible","defaultPageSize","showPageSizeSelector","allowedPageSizes","showInfo","alignment","allowEditing","caption","format","precision","Component","Viewsalesreport","Createnewlist","items","currentitem","companyName","companyAddress","companyCity","companyPC","companyNumber","array","quantity","showClearButton","defaultSortOrder","text","console","log","alert","renderDetail","data","address","companyname","align-items","column","summaryType","displayFormat","valueFormat","company","loadMode","Viewcurrentlists","print","listData","row","trackingNumber","trackingCompany","length","byKey","open","websiteurl","render","valueExpr","displayExpr","trackingwebsite","Viewcompletedlists","selectedItemKeys","selectTextOnEditStart","startEditAction","onSelectionChanged","selectionChanged","selectionChangedEdit","contentReady","Newapp","path","exact","component","HomePage","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.60c0c0c2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Loginform(props) {\r\n\r\n    const history = useHistory();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n  \r\n    function validate() {\r\n      return username.length > 0 && password.length > 0;\r\n    }\r\n  \r\n    function handleSubmit(event) {\r\n      if(username === 'admin' && password === 'testing1'){\r\n          setUsername('success!')\r\n          setPassword('')\r\n          history.push('/home')\r\n          \r\n      } else {\r\n          setUsername('incorrect username/password')\r\n          setPassword('')\r\n      }\r\n      event.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <div className='header'>\r\n           <h4 className='white-text'> Korean Database Management System  </h4>\r\n        \r\n        <div className='login-form'>\r\n            <div className='login-text'>\r\n                <h5>Enter Details</h5>\r\n            </div>\r\n            <div className='username-password'> \r\n               <h6>Username</h6></div>\r\n            <div>\r\n                  <input\r\n                    className='login-input'\r\n                    id='username'\r\n                    name='username'\r\n                    placeholder='type username'\r\n                    value={username}\r\n                    onChange={e => setUsername(e.target.value)}\r\n                  ></input>\r\n            </div>\r\n            <div className='username-password'> \r\n               <h6>Password</h6></div>\r\n            <div>\r\n                  <input\r\n                  className='login-input'\r\n                  id='password'\r\n                  name='password'\r\n                  placeholder='minimum 8 characters'\r\n                  type='password'\r\n                  value={password}\r\n                  onChange={e => setPassword(e.target.value)}\r\n                  ></input>\r\n            </div>\r\n            <div className='center'>\r\n                <button\r\n                className='login-button'\r\n                type='button'\r\n                Go homepage\r\n                disabled={username === '' || password === ''}\r\n                onClick={handleSubmit}>\r\n                    Login\r\n                </button>\r\n            </div>\r\n            </div>\r\n            </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Loginform;","import React from 'react';\r\nimport './App.css';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Logout() {\r\n\r\n    const history = useHistory();\r\n\r\n    function handleSubmit(event) {\r\n        history.push('/')\r\n      }\r\n\r\n    return (\r\n       <button\r\n       className='logout-button'\r\n       type='button'\r\n       Go loginform\r\n       onClick={handleSubmit}\r\n       >\r\n           Log Out\r\n       </button>\r\n    );\r\n\r\n} ;\r\nexport default Logout;\r\n","import React, { useState, useEffect } from 'react';\r\nimport 'materialize-css/dist/css/materialize.min.css';\r\n\r\nimport './App.css';\r\nimport Logout from './Logout';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Homepage() {\r\n\r\n   const history = useHistory();\r\n\r\n   function handleClick(event){\r\n      if(event.target.id==='1'){\r\n         history.push('/additem')\r\n      }\r\n      if(event.target.id==='2'){\r\n         history.push('/searchitems')\r\n      }\r\n      if(event.target.id==='4'){\r\n         history.push('/createnewlist')\r\n      }\r\n      if(event.target.id==='5'){\r\n         history.push('/viewcurrentlists')\r\n      }\r\n      if(event.target.id==='6'){\r\n         history.push('/viewcompletedlists')\r\n      }\r\n   }\r\n\r\n\r\n    return (\r\n     <div>\r\n        <div className='header'>\r\n           <h4 className='white-text'> Home Page </h4>\r\n        </div>\r\n           <Logout/>\r\n           <div>\r\n               <div className='home-box-1'>\r\n                   <div className='username-password'>\r\n                       <h5>Item Database</h5>\r\n                   </div>\r\n                 <button className='home-box-button'\r\n                 id = '1'\r\n                 onClick={handleClick}>\r\n                    Add Item\r\n                 </button>\r\n                 <button className='home-box-button'\r\n                 id = '2'\r\n                 onClick={handleClick}>\r\n                    Search Items\r\n                 </button>\r\n               </div>\r\n               <div className='home-box-2'>\r\n               <div className='username-password'>\r\n                   <h5>Shipping Lists</h5>\r\n               </div>\r\n               <button className='home-box-button'\r\n               id = '4'\r\n               onClick={handleClick}>\r\n                  Create New List\r\n               </button>\r\n               <button className='home-box-button'\r\n               id = '5'\r\n               onClick={handleClick}>\r\n                   View Current Lists\r\n                 </button>\r\n                 <button className='home-box-button'\r\n                 id = '6'\r\n                 onClick={handleClick}>\r\n                  View Completed Lists\r\n                 </button>\r\n               </div>\r\n           </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Homepage;","import './App.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport React, { useState, Component } from 'react';\r\nimport Logout from './Logout';\r\nimport notify from 'devextreme/ui/notify';\r\nconst axios = require('axios');\r\n\r\nfunction Additem() {\r\n\r\n    const history = useHistory();\r\n\r\n    const [barcode, setBarcode] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [weight, setWeight] = useState(\"\");\r\n    const [description, setDesc] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    function handleClick(event) {\r\n        if (barcode === '' || name === '' || price === '' || weight === '') {\r\n            notify('Could not add items to database', \"error\");\r\n        } else {\r\n\r\n            axios.post('http://localhost:3000/items/additem', {\r\n                barcode, name, price, weight, description\r\n            })\r\n                .catch(err => notify(\"Item could not be added!\", \"error\"))\r\n                .then(notify(\"Item Added!\", \"success\"));\r\n            setError('')\r\n            setBarcode('')\r\n            setName('')\r\n            setPrice('')\r\n            setWeight('')\r\n            setDesc('')\r\n        }\r\n\r\n    }\r\n\r\n    function handleDone(event) {\r\n        history.push('/home')\r\n    }\r\n\r\n    return (\r\n        <div className='header'>\r\n            <h4 className='white-text'>Add Item</h4>\r\n            <Logout />\r\n            <div className='additem-box'>\r\n                <div className='gen-text'>\r\n                    <h1>{error}</h1>\r\n                   Barcode Scan:\r\n                   <input className='text-input' id='add-barcode' type='number' value={barcode}\r\n                        onChange={e => setBarcode(e.target.value)} placeholder='must enter'></input>\r\n                </div>\r\n                <div className='gen-text'>\r\n                    Name:\r\n                   <input className='text-input' id='add-name' type='text' value={name}\r\n                        onChange={e => setName(e.target.value)} placeholder='must enter'></input>\r\n                </div>\r\n                <div className='gen-text'>\r\n                    Price (in $):\r\n                   <input className='text-input' id='add-price' type='number' value={price}\r\n                        onChange={e => setPrice(e.target.value)} placeholder='must enter'></input>\r\n                </div>\r\n                <div className='gen-text'>\r\n                    Weight (in kg):\r\n                   <input className='text-input' id='add-weight' type='number' value={weight}\r\n                        onChange={e => setWeight(e.target.value)} placeholder='must enter'></input>\r\n                </div>\r\n                <div className='gen-text'>\r\n                    Description:\r\n                   <input className='text-input' id='add-desc' type='text' value={description}\r\n                        onChange={e => setDesc(e.target.value)} placeholder='optional'></input>\r\n                </div>\r\n                <button className='add-item-button'\r\n                    onClick={handleClick}>\r\n                    Add Item\r\n               </button>\r\n                <button className='add-item-button'\r\n                    onClick={handleDone}>\r\n                    Done\r\n               </button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Additem;\r\n","\r\nimport './App.css';\r\nimport Logout from './Logout';\r\nimport React, { useState, Component } from 'react';\r\nimport DataGrid, {\r\n    Column,\r\n    Pager,\r\n    Paging,\r\n    Editing,\r\n    Form,\r\n    Popup,\r\n    Position,\r\n    SearchPanel,\r\n    Export\r\n} from 'devextreme-react/data-grid';\r\nimport 'devextreme-react/text-area';\r\nimport { Item } from 'devextreme-react/form';\r\nimport CustomStore from \"devextreme/data/custom_store\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.material.blue.light.css';\r\nimport notify from 'devextreme/ui/notify';\r\n\r\nconst URL = 'http://localhost:3000/api';\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}\r\n\r\nclass Searchitems extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            itemData: new CustomStore({\r\n                key: 'id',\r\n                load: () => {\r\n                    return fetch(`/api/items`)\r\n                        .then(handleErrors)\r\n                        .then(response => response.json())\r\n                        .catch(() => { throw 'Network error' })\r\n                },\r\n                insert: (values) => {\r\n                    return fetch(`${URL}/items/additem`, {\r\n                        method: \"POST\",\r\n                        body: JSON.stringify(values),\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        }\r\n                    }).then(handleErrors)\r\n                        .catch(err => notify(\"Item could not be added!\", \"error\"))\r\n                        .then(notify(\"Item Added!\", \"success\"));\r\n\r\n                },\r\n                update: (key, values) => {\r\n                    return fetch(`${URL}/items/update/${key}`, {\r\n                        method: \"PUT\",\r\n                        body: JSON.stringify(values),\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        }\r\n                    }).then(handleErrors)\r\n                        .catch(err => notify(\"Item could not be updated!\", \"error\"))\r\n                        .then(notify(\"Item Updated!\", \"success\"));\r\n                }\r\n            }),\r\n            refreshMode: 'full'\r\n        };\r\n        this.handleRefreshModeChange = this.handleRefreshModeChange.bind(this);\r\n    }\r\n\r\n    handleDone = (e) => {\r\n        this.props.history.push('/home');\r\n    }\r\n\r\n    handleRefreshModeChange(e) {\r\n        this.setState({ refreshMode: e.value });\r\n    }\r\n\r\n    render() {\r\n        const { refreshMode, itemData } = this.state;\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"create-table-box\">\r\n                    <h2 align=\"center\"\r\n                    >Item Database</h2>\r\n                    <DataGrid\r\n                        dataSource={itemData}\r\n                        showBorders={true}\r\n                        repaintChangesOnly={true}\r\n                        keyExpr=\"id\" >\r\n                        <Editing\r\n                            mode=\"popup\"\r\n                            allowUpdating={true}\r\n                            allowAdding={true}\r\n                            refreshMode={refreshMode}>\r\n                            <Popup title='Item Information' showTitle={true} width={700} height={525}>\r\n                                <Position my=\"center\" at=\"center\" of={window} />\r\n                            </Popup>\r\n                            <Form>\r\n                                <Item itemType=\"group\" colCount={3} colSpan={2}>\r\n                                    <Item dataField=\"barcode\" />\r\n                                    <Item dataField=\"name\" />\r\n                                </Item>\r\n                                <Item itemType=\"group\" colCount={3} colSpan={2}>\r\n\r\n                                    <Item dataField=\"price\" />\r\n                                    <Item dataField=\"weight\" />\r\n                                    <Item dataField=\"isAvailable\"\r\n                                        dataType=\"boolean\" />\r\n                                    <Item\r\n                                        dataField=\"description\"\r\n                                        editorType=\"dxTextArea\"\r\n                                        colSpan={3}\r\n                                        editorOptions={{ height: 100 }} />\r\n                                </Item>\r\n                            </Form>\r\n                        </Editing>\r\n                        <Export enabled={true} fileName=\"DatabaseItems\" allowExportSelectedData={false} />\r\n                        <SearchPanel\r\n                            visible={true}\r\n                            width={250}\r\n                            placeholder=\"Search...\" />\r\n                        <Paging defaultPageSize={5} />\r\n                        <Pager\r\n                            showPageSizeSelector={true}\r\n                            allowedPageSizes={[5, 10, 20]}\r\n                            showInfo={true} />\r\n                        <Column dataField=\"id\"\r\n                            dataType=\"number\"\r\n                            alignment=\"center\"\r\n                            allowEditing={false}\r\n                            caption=\"Item ID\" />\r\n                        <Column dataField=\"barcode\"\r\n                            dataType=\"number\"\r\n                            alignment=\"center\" />\r\n                        <Column dataField=\"name\" />\r\n                        <Column dataField=\"description\" />\r\n                        <Column dataField=\"price\"\r\n                            dataType=\"number\"\r\n                            caption=\"Price ($)\"\r\n                            format={{ type: 'currency', precision: 2 }} />\r\n                        <Column dataField=\"weight\"\r\n                            dataType=\"number\"\r\n                            caption=\"Weight (kg)\" />\r\n                        <Column dataField=\"isAvailable\"\r\n                            caption=\"Is Available\"\r\n                            alignment=\"center\"\r\n                            dataType=\"boolean\" />\r\n                    </DataGrid>\r\n                </div>\r\n                <div>\r\n                    <button className='add-item-button'\r\n                        onClick={this.handleDone}>\r\n                        Done\r\n               </button>\r\n\r\n                </div>\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Searchitems;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Logout from './Logout';\r\n\r\nfunction Viewsalesreport() {\r\n \r\n    return (\r\n        <div className='header'>\r\n           <h4 className='white-text'>View Sales Report</h4>\r\n           <Logout/>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Viewsalesreport;","import React, { useState, Component } from 'react';\r\nimport './App.css';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Logout from './Logout';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport DataGrid, {\r\n    Column,\r\n    Pager,\r\n    Paging,\r\n    Button,\r\n    Form,\r\n    Position,\r\n    SearchPanel,\r\n    Editing,\r\n    Popup,\r\n    Sorting\r\n} from 'devextreme-react/data-grid';\r\nimport 'devextreme-react/text-area';\r\nimport { TextBox } from 'devextreme-react';\r\nimport { Item } from 'devextreme-react/form';\r\nimport CustomStore from \"devextreme/data/custom_store\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.material.blue.light.css';\r\n\r\nconst axios = require('axios');\r\n\r\nconst URL = 'http://localhost:3000/api';\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}\r\n\r\nclass Createnewlist extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            items: [],\r\n            currentitem: [],\r\n            companyName: \"\",\r\n            companyAddress: \"\",\r\n            companyCity: \"\",\r\n            companyPC: \"\",\r\n            companyNumber: \"\",\r\n            itemData: new CustomStore({\r\n                key: 'id',\r\n                load: () => {\r\n                    return fetch(`${URL}/items/available`)\r\n                        .then(handleErrors)\r\n                        .then(response => response.json())\r\n                        .catch(() => { throw 'Network error' })\r\n                },\r\n                update: (key, values) => {\r\n                    const array = [{ id: key, quantity: values.quantity, weight: \"0\", price: \"\", name: \"\" }]\r\n                    return (\r\n                        this.setState({ items: [...this.state.items, ...array] })\r\n                    );\r\n                }\r\n            }),\r\n            refreshMode: 'reshape'\r\n        };\r\n        this.handleRefreshModeChange = this.handleRefreshModeChange.bind(this);\r\n    }\r\n    handleRefreshModeChange(e) {\r\n        this.setState({ refreshMode: e.value });\r\n    }\r\n\r\n    render() {\r\n        const { itemData, refreshMode, companyName, companyAddress, companyCity, companyNumber } = this.state;\r\n        const { items } = this.state;\r\n        function handleDone() {\r\n            console.log(items)\r\n            axios.post(`${URL}/list/newlist`, {\r\n                items\r\n            })\r\n                .then(function (response) {\r\n                    alert(\"Item Added\");\r\n                    console.log(response);\r\n                })\r\n                .catch(function (error) {\r\n                    alert(error);\r\n                    console.log(error);\r\n                });\r\n        }\r\n        return (\r\n            <React.Fragment>\r\n                <div className='header'>\r\n                    <h4 className='white-text'>Create New List</h4>\r\n                    <Logout />\r\n                    <div className='create-form-box'>\r\n                        <div className=\"dx-field\">\r\n                            <div className=\"dx-field-value\">\r\n                                <TextBox\r\n                                    value={this.companyName}\r\n                                    showClearButton={true}\r\n                                    width=\"200px\"\r\n                                    placeholder=\"Company Name\"\r\n                                    alignment=\"left\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"dx-field\">\r\n                            <div className=\"dx-field-value\">\r\n                                <TextBox\r\n                                    value={this.companyAddress}\r\n                                    showClearButton={true}\r\n                                    width=\"200px\"\r\n                                    placeholder=\"Company Address\"\r\n                                    alignment=\"right\"\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"create-table-box\">\r\n                        <DataGrid\r\n                            dataSource={itemData}\r\n                            showBorders={true}\r\n                            repaintChangesOnly={true}\r\n                            key=\"id\" >\r\n                            <Sorting mode=\"single\" />\r\n                            <Editing\r\n                                mode=\"popup\"\r\n                                allowUpdating={true}\r\n                                refreshMode={refreshMode}>\r\n                                <Popup title={this.name} showTitle={false} width={400} height={200}>\r\n                                    <Position my=\"center\" at=\"center\" of={window} />\r\n                                </Popup>\r\n                                <Form>\r\n                                    <Item dataField=\"name\" />\r\n                                    <Item dataField=\"quantity\"\r\n                                        dataType=\"number\" />\r\n                                </Form>\r\n                            </Editing>\r\n                            <SearchPanel\r\n                                visible={true}\r\n                                width={250}\r\n                                placeholder=\"Search...\" />\r\n                            <Paging defaultPageSize={10} />\r\n                            <Pager\r\n                                showPageSizeSelector={true}\r\n                                allowedPageSizes={[10, 15, 20]}\r\n                                showInfo={true} />\r\n                            <Column dataField=\"id\"\r\n                                visible={false} />\r\n                            <Column dataField=\"barcode\"\r\n                                dataType=\"number\"\r\n                                alignment=\"center\" />\r\n                            <Column dataField=\"name\"\r\n                                allowEditing={false} />\r\n                            <Column dataField=\"description\" />\r\n                            <Column dataField=\"price\"\r\n                                dataType=\"number\"\r\n                                caption=\"Price ($)\"\r\n                                format={{ type: 'currency', precision: 2 }} />\r\n                            <Column dataField=\"weight\"\r\n                                dataType=\"number\"\r\n                                caption=\"Weight (kg)\" />\r\n                            <Column dataField=\"quantity\"\r\n                                dataType=\"number\"\r\n                                caption=\"Added Quantity\"\r\n                                defaultSortOrder=\"asc\" />\r\n                            <Column type=\"buttons\">\r\n                                <Button name=\"edit\" />\r\n                                <Button text=\"A\"\r\n                                    onClick={handleDone} />\r\n                            </Column>\r\n                        </DataGrid>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Createnewlist;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport notify from 'devextreme/ui/notify';\r\nimport DataGrid, {\r\n    Column,\r\n    Pager,\r\n    Paging,\r\n    SearchPanel,\r\n    MasterDetail,\r\n    Selection,\r\n    Summary,\r\n    TotalItem,\r\n    Lookup,\r\n    Editing,\r\n    Popup,\r\n    Position,\r\n    Form,\r\n    Sorting,\r\n    Button,\r\n    Export\r\n} from 'devextreme-react/data-grid';\r\nimport { Item } from 'devextreme-react/form';\r\nimport CustomStore from \"devextreme/data/custom_store\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.material.blue.light.css';\r\nconst URL = 'http://localhost:3000/api';\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}\r\n\r\nfunction renderDetail(props) {\r\n    let { items = [], address, companyname } = props.data;\r\n\r\n    return (\r\n        <div align=\"center\">\r\n            <h6>Company: {companyname}</h6>\r\n            <h6>Delivery Address: {address}</h6>\r\n            <DataGrid\r\n                dataSource={items}\r\n                width=\"50%\"\r\n                align-items=\"center\"\r\n                showBorders={true}>\r\n                <Column dataField=\"name\" />\r\n                <Column dataField=\"quantity\" />\r\n                <Column dataField=\"weight\" />\r\n                <Column dataField=\"price\" />\r\n                <Summary>\r\n                    <TotalItem\r\n                        column=\"quantity\"\r\n                        summaryType=\"sum\"\r\n                        displayFormat={'Total Quantity: {0}'} />\r\n                    <TotalItem\r\n                        column=\"weight\"\r\n                        summaryType=\"sum\"\r\n                        displayFormat={'Total Weight (kg): {0}'}\r\n                        valueFormat={{ type: 'fixedPoint', precision: 2 }} />\r\n                    <TotalItem\r\n                        column=\"price\"\r\n                        summaryType=\"sum\"\r\n                        displayFormat={'Total Price: {0}'}\r\n                        valueFormat={{ type: 'currency', precision: 2 }} />\r\n                </Summary>\r\n            </DataGrid>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nconst company = new CustomStore({\r\n    key: '_id',\r\n    loadMode: 'raw',\r\n    load: () => {\r\n        return fetch(`${URL}/tracking`)\r\n            .then(handleErrors)\r\n            .then(response => response.json())\r\n            .catch((err) => { throw 'Network error' })\r\n    }\r\n});\r\n\r\nclass Viewcurrentlists extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            listData: new CustomStore({\r\n                key: 'id',\r\n                loadMode: 'raw',\r\n                load: () => {\r\n                    return fetch(`${URL}/list`)\r\n                        .then(handleErrors)\r\n                        .then(response => response.json())\r\n                        .catch(() => { throw 'Network error' })\r\n                },\r\n                update: (key, values) => {\r\n                    return fetch(`${URL}/list/update/${key}`, {\r\n                        method: \"PUT\",\r\n                        body: JSON.stringify(values),\r\n                        headers: {\r\n                            'Content-Type': 'application/json'\r\n                        }\r\n                    }).then(handleErrors);\r\n                }\r\n            }),\r\n            refreshMode: 'full'\r\n        };\r\n    }\r\n\r\n    trackingwebsite(props) {\r\n        let { trackingNumber, trackingCompany } = props.row.data;\r\n\r\n        if (trackingNumber.length === 0) {\r\n            notify(\"No Tracking Number\", \"error\")\r\n        }\r\n        else\r\n            company.byKey(trackingCompany).then(\r\n                (company) => { window.open(`${company.websiteurl}${trackingNumber}`) },\r\n                (error) => { notify(\"Erorr finding company\", \"error\") }\r\n            );\r\n    }\r\n    print = (props) => {\r\n    }\r\n\r\n\r\n    render() {\r\n        const { listData } = this.state;\r\n        const { refreshMode } = this.state;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"create-table-box\">\r\n                    <h2 align=\"center\"\r\n                    >Current Shipping Lists</h2>\r\n                </div>\r\n                <DataGrid\r\n                    keyExpr=\"id\"\r\n                    dataSource={listData}\r\n                    showBorders={true}>\r\n                    <Editing\r\n                        mode=\"popup\"\r\n                        allowUpdating={true}\r\n                        refreshMode={refreshMode}>\r\n                        <Popup title=\"Shipping List Edit\" showTitle={true} width={600} height={600}>\r\n                            <Position my=\"center\" at=\"center\" of={window} />\r\n                        </Popup>\r\n                        <Form>\r\n                            <Item dataField=\"companyname\" />\r\n                            <Item dataField=\"address\" />\r\n                            <Item dataField=\"packingDate\" />\r\n                            <Item dataField=\"shippingDate\" />\r\n                            <Item dataField=\"trackingCompany\" />\r\n                            <Item dataField=\"trackingNumber\" />\r\n                            <Item dataField=\"complete\" />\r\n                        </Form>\r\n                    </Editing>\r\n                    <Selection mode=\"single\" />\r\n                    <Sorting mode=\"single\" />\r\n                    <Export enabled={true} fileName=\"Current_Shipping_List\" allowExportSelectedData={false} />\r\n                    <MasterDetail enabled={true} render={renderDetail} />\r\n                    <SearchPanel\r\n                        visible={true}\r\n                        width={250}\r\n                        placeholder=\"Search...\" />\r\n                    <Paging defaultPageSize={5} />\r\n                    <Pager\r\n                        showPageSizeSelector={true}\r\n                        allowedPageSizes={[5, 10, 20]}\r\n                        showInfo={true} />\r\n                    <Column dataField=\"id\"\r\n                        dataType=\"number\"\r\n                        alignment=\"center\"\r\n                        allowEditing={false}\r\n                        caption=\"List ID\" />\r\n                    <Column dataField=\"companyname\"\r\n                        caption=\"Company Name\" />\r\n                    <Column dataField=\"address\"\r\n                        visible={false} />\r\n                    <Column dataField=\"packingDate\"\r\n                        dataType=\"date\"\r\n                        format=\"dd/MM/yyyy\" />\r\n                    <Column dataField=\"totalquantity\"\r\n                        caption=\"Total Quantity\" />\r\n                    <Column dataField=\"totalprice\"\r\n                        dataType=\"number\"\r\n                        caption=\"Total Price ($)\"\r\n                        format={{ type: 'currency', precision: 2 }} />\r\n                    <Column dataField=\"totalweight\"\r\n                        dataType=\"number\"\r\n                        caption=\"Total Weight (kg)\" />\r\n                    <Column dataField=\"trackingCompany\" caption=\"TrackingCompany\">\r\n                        <Lookup dataSource={company} valueExpr=\"_id\" displayExpr=\"companyName\" />\r\n                    </Column>\r\n                    <Column dataField=\"trackingNumber\" />\r\n                    <Column dataField=\"shippingDate\"\r\n                        dataType=\"date\"\r\n                        format=\"dd/MM/yyyy\" />\r\n                    <Column dataField=\"complete\"\r\n                        dataType=\"boolean\" />\r\n                    <Column type=\"buttons\">\r\n                        <Button name=\"edit\" />\r\n                        <Button text=\"T\"\r\n                            onClick={this.trackingwebsite} />\r\n                        <Button text=\"P\"\r\n                            onClick={this.print} />\r\n                    </Column>\r\n                </DataGrid>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Viewcurrentlists;","import React, { useState, Component } from 'react';\r\nimport './App.css';\r\nimport Logout from './Logout';\r\nimport DataGrid, {\r\n   Column,\r\n   Pager,\r\n   Paging,\r\n   SearchPanel,\r\n   MasterDetail,\r\n   Selection,\r\n   Summary,\r\n   TotalItem,\r\n   Lookup,\r\n   Sorting,\r\n   FilterRow,\r\n   Export\r\n} from 'devextreme-react/data-grid';\r\nimport CustomStore from \"devextreme/data/custom_store\";\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport 'devextreme/dist/css/dx.material.blue.light.css';\r\nconst URL = 'http://localhost:3000/api';\r\n\r\nfunction handleErrors(response) {\r\n   if (!response.ok) {\r\n      throw Error(response.statusText);\r\n   }\r\n   return response;\r\n}\r\n\r\nfunction renderDetail(props) {\r\n   let { items = [], address, companyname, company } = props.data;\r\n   return (\r\n      <div align=\"center\">\r\n         <h6>Company: {companyname}</h6>\r\n         <h6>Delivery Address: {address}</h6>\r\n         <DataGrid\r\n            dataSource={items}\r\n            width=\"50%\"\r\n            align-items=\"center\"\r\n            showBorders={true}>\r\n            <Column dataField=\"name\" />\r\n            <Column dataField=\"quantity\" />\r\n            <Column dataField=\"weight\" />\r\n            <Column dataField=\"price\" />\r\n            <Summary>\r\n               <TotalItem\r\n                  column=\"quantity\"\r\n                  summaryType=\"sum\"\r\n                  displayFormat={'Total Quantity: {0}'} />\r\n               <TotalItem\r\n                  column=\"weight\"\r\n                  summaryType=\"sum\"\r\n                  displayFormat={'Total Weight (kg): {0}'}\r\n                  valueFormat={{ type: 'fixedPoint', precision: 2 }} />\r\n               <TotalItem\r\n                  column=\"price\"\r\n                  summaryType=\"sum\"\r\n                  displayFormat={'Total Price: {0}'}\r\n                  valueFormat={{ type: 'currency', precision: 2 }} />\r\n            </Summary>\r\n         </DataGrid>\r\n      </div>\r\n   );\r\n}\r\n\r\nclass Viewcompletedlists extends Component {\r\n   constructor() {\r\n      super();\r\n      this.state = {\r\n         selectedItemKeys: [],\r\n         selectTextOnEditStart: true,\r\n         startEditAction: 'dblClick',\r\n         listData: new CustomStore({\r\n            key: 'id',\r\n            loadMode: 'raw',\r\n            load: () => {\r\n               return fetch(`${URL}/list/completed`)\r\n                  .then(handleErrors)\r\n                  .then(response => response.json())\r\n                  .catch(() => { throw 'Network error' })\r\n            },\r\n            update: (key, values) => {\r\n               return fetch(`${URL}/list/update/${key}`, {\r\n                  method: \"PUT\",\r\n                  body: JSON.stringify(values),\r\n                  headers: {\r\n                     'Content-Type': 'application/json'\r\n                  }\r\n               }).then(handleErrors);\r\n            }\r\n         }),\r\n         company: new CustomStore({\r\n            key: '_id',\r\n            loadMode: 'raw',\r\n            load: () => {\r\n               return fetch(`${URL}/tracking`)\r\n                  .then(handleErrors)\r\n                  .then(response => response.json())\r\n                  .catch(() => { throw 'Network error' })\r\n            }\r\n         }),\r\n         refreshMode: 'full'\r\n      };\r\n   }\r\n\r\n   render() {\r\n      const { listData } = this.state;\r\n      const { company } = this.state;\r\n\r\n      return (\r\n         <React.Fragment>\r\n            <div className=\"create-table-box\">\r\n               <h2 align=\"center\"\r\n               >Completed Shipping Lists</h2>\r\n            </div>\r\n            <DataGrid\r\n               keyExpr=\"id\"\r\n               dataSource={listData}\r\n               showBorders={true}\r\n               repaintChangesOnly={true}\r\n               onSelectionChanged={this.selectionChanged}\r\n               onSelectionChanged={this.selectionChangedEdit}\r\n               onContentReady={this.contentReady}>\r\n               <Sorting mode=\"single\" />\r\n               <Export enabled={true} fileName=\"Completed_Shipping_List\" allowExportSelectedData={false} />\r\n               <FilterRow visible={true} />\r\n               <Selection mode=\"single\" />\r\n               <MasterDetail enabled={true} render={renderDetail} />\r\n               <SearchPanel\r\n                  visible={true}\r\n                  width={250}\r\n                  placeholder=\"Search...\" />\r\n               <Paging defaultPageSize={5} />\r\n               <Pager\r\n                  showPageSizeSelector={true}\r\n                  allowedPageSizes={[5, 10, 20]}\r\n                  showInfo={true} />\r\n\r\n               <Column dataField=\"id\"\r\n                  dataType=\"number\"\r\n                  alignment=\"center\"\r\n                  allowEditing={false}\r\n                  caption=\"List ID\" />\r\n               <Column dataField=\"companyname\"\r\n                  caption=\"Company Name\" />\r\n               <Column dataField=\"packingDate\"\r\n                  dataType=\"date\"\r\n                  format=\"dd/MM/yyyy\" />\r\n               <Column dataField=\"totalquantity\"\r\n                  caption=\"Total Quantity\" />\r\n               <Column dataField=\"totalprice\"\r\n                  dataType=\"number\"\r\n                  caption=\"Total Price ($)\"\r\n                  format={{ type: 'currency', precision: 2 }} />\r\n               <Column dataField=\"totalweight\"\r\n                  dataType=\"number\"\r\n                  caption=\"Total Weight (kg)\" />\r\n               <Column dataField=\"trackingCompany\" caption=\"TrackingCompany\">\r\n                  <Lookup dataSource={company} valueExpr=\"_id\" displayExpr=\"companyName\" />\r\n               </Column>\r\n               <Column dataField=\"trackingNumber\" />\r\n               <Column dataField=\"shippingDate\"\r\n                  dataType=\"date\"\r\n                  format=\"dd/MM/yyyy\" />\r\n            </DataGrid>\r\n         </React.Fragment>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Viewcompletedlists;","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport 'devextreme/dist/css/dx.common.css';\r\nimport Loginform from './Loginform';\r\nimport HomePage from './HomePage';\r\nimport Additem from './Additem';\r\nimport Searchitems from './SearchItems';\r\nimport Viewsalesreport from './Viewsalesreport';\r\nimport Createnewlist from './Createnewlist';\r\nimport Viewcurrentlists from './Viewcurrentlists';\r\nimport Viewcompletedlists from './Veiwcompletedlists';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\n\r\nconst Newapp = () => {\r\n    return (\r\n     \r\n    <Router> \r\n      <Switch>\r\n      <Route path='/' exact component={Loginform}/>\r\n      <Route path='/home/' component={HomePage}/>\r\n      <Route path='/additem/' component={Additem}/>\r\n      <Route path='/searchitems/' component={Searchitems}/>\r\n      <Route path='/viewsalesreport' component={Viewsalesreport}/>\r\n      <Route path='/createnewlist/' component={Createnewlist}/>\r\n      <Route path='/viewcurrentlists/' component={Viewcurrentlists}/>\r\n      <Route path='/viewcompletedlists/' component={Viewcompletedlists}/>\r\n      </Switch>\r\n        <div className='row'>\r\n        </div>\r\n       </Router>  \r\n    );\r\n\r\n};\r\n\r\nexport default Newapp;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}